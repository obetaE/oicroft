Leave only those pages for your website inside your app directory
SHIFT + ALT + DOWN, Duplicates one line down
SHIFT + ALT + UP, duplicates a line up
ALT + CLICK activates multiple cursors

.map function:
The map function is used to iterate over an array and apply a function to each element in the array.
It returns a new array containing the results of applying the function to each element. It allows you to call the components in an already created array. And it requires a unique key for it. And the entire function is enclosed in curly brackets {}
The components in the array can be called but saying, <The name of the array(the constant you declared)>.<The content in the array>, array.map(function(currentValue, index, array) {
  // return element for newArray
})

For the map function there are two things involved, the array being called, the function used to encompass the link which will contain the elements involved

throw new Error ('Error in Home')---An error layout

The code {new Date().toLocaleTimeString()} is a JavaScript expression used to display the current time in a localized format. Here's a detailed breakdown of what each part of this code does

To give conditions when opening a website you'd use the session function, which is written like:
{session ? () : ()} 
This means that if session is true, then the system would do something, if not then it'll do something.
This is a tenary operator, see how it works
condition ? valueIfTrue : valueIfFalse


usePathname()
const pathName = usePathname();:
usePathname is a hook that retrieves the current URL path in a Next.js application.
pathName will contain the current path, such as /about if the user is on the "About" page.


If you need user initeraction then your component has to be a client component

To bypass the image restriction, on the imageg tag at the end type FILL, then enclose the imageg element in a parent div. When done gice the div a className and then in the css you must make the position relative then give whatever height and or width you desire

How to add external images links, gog to next.config.mjs. Create an array, called images inside the const. Then the urls would be the properties of that array
i.e
const nextConfig = {
  images:{
    remotePatterns: "The url you want to use"
  }
}
OR IT CAN EVEN BE DONE IN THIS FORMAT:
const nextConfig = {
  images:{
    remotePatterns: {
      protocol: 'https'
      hostname: "the url"
    }
  }
}

Then put the link in src

How to generate random texts, type lorem12....basically lorem and the number of words you want  

Fetching data is an async operation


control + F searches the code editor for  particular code


When fetching data from slugs, the inside of the fetch command is enclosed in a parenthesis 
i.e const res = await fetch(`route/${slug}`);

If you're to have different parts of a page that collect data from a database, it's best to divide them into different components to prevent slower rendering time.


Making a button round 
button {
    height: 50px;
    width: 50px;
    border-radius: 50%;
    overflow: hidden;
    padding: 0; /* Removes default padding */
    border: none; /* Optional: Remove default border */
    display: inline-flex; /* Ensures the button can hold child elements */
    align-items: center; /* Centers child elements vertically */
    justify-content: center; /* Centers child elements horizontally */
    background-color: transparent; /* Optional: Customize button background */
  }

  Without padding being 0 and overflow being hidden, the circle won't come to effect


   // the params object signifies that we are expecting
//  a paramater from our api call e.g(api/getDetails/davidnobody0182@gmail.com)

How to make an image a background image
.container {
  position: relative;
  width: 100%;
  height: 100vh;
}

.background {
  background-image: url('/path/to/background-image.jpg'); /* Adjust the path */
  background-size: cover;
  background-position: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1; /* Lower z-index for the background */
}

.foreground {
  position: relative;
  z-index: 10; /* Higher z-index to appear above the background */
  color: white;
  padding: 20px;
}

And thats how to make a background image

THERE'S A SECOND AND BETTER APPROACH TO THIS
.HeroSection{
  position: relative;
  height: 100vh; /*Full Viewport Height*/
  width: 100vw;/*Full Viewport Width*/
  background-image: url('/background.png');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  z-index: 1;
}

but be sure to give the container div, position: relative; width: 100%; and overflow: hidden;






